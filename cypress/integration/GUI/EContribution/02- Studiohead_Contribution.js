///<reference types="cypress"/>
import Dashboard from '../Utility/Dashboard'
import Menu from '../PageObject/DashboardPage'
import Contribution from '../PageObject/ContributionPage'
import AddContribution from '../PageObject/AddContributionPage'
describe('Contribution feature for Studiohead',function(){
    it('LB-91 : As Studiohead, user should able to add contribution',function(){
        const page = new Dashboard()
        const menu = new Menu()
        const cn = new Contribution()
        const fy = new AddContribution()
        page.Studiohead()
        cy.get("span[class='fs-4']").should('contain','Welcome')    
        cy.title().should('eq','Knoldus Leaderboard')
        menu.BoardDropdown()  
        menu.contribution()
        cy.wait(1000)
        cn.AddContribution()
        fy.ContributionType('Book')
        fy.Title('Browser Testing')
        fy.ContributionDate('2022-04-18')
        fy.Technology('Selenium,Cypress')
        fy.UrlDetail()
        fy.Submit()
        cy.get('.ng-trigger').should('contain','Successfully added contribution!')
       })
    it('LB-98 : As Studiohead, user should able to view his contributions',function(){
        const page = new Dashboard()
        const menu = new Menu()
        const cn = new Contribution()
        page.Studiohead()
        cy.get("span[class='fs-4']").should('contain','Welcome')    
        cy.title().should('eq','Knoldus Leaderboard')
        menu.BoardDropdown()             
        menu.contribution()  
        cy.wait(1000)
        cy.get(':nth-child(1) > .datatable-body-row > .datatable-row-center > :nth-child(2) > .datatable-body-cell-label').then(($fo)=>{
            const type = $fo.text()
            cy.log(type).should('have.text',type)
        })
        cy.get(':nth-child(1) > .datatable-body-row > .datatable-row-center > :nth-child(3) > .datatable-body-cell-label').then(($fg) =>{
            const date = $fg.text()
            cy.log(date).should('have.text',date)
        })
        cy.get(':nth-child(1) > .datatable-body-row > .datatable-row-center > [style="width: 100px; height: 45px;"] > .datatable-body-cell-label').then(($ff)=>{
            const stat = $ff.text()
            cy.log(stat).should('have.text',stat)
        })
        cn.View()
        cy.wait(500)
        cn.Exit()
        cy.scrollTo('bottom')
    })
    it('LB-108 : As Studiohead, user should able to edit his own contribution',function(){
        const page = new Dashboard()
        const menu = new Menu()
        const cn = new Contribution()
        const fy = new AddContribution()
        page.Studiohead()
        cy.get("span[class='fs-4']").should('contain','Welcome')    
        cy.title().should('eq','Knoldus Leaderboard')
        menu.BoardDropdown()    
        menu.contribution()
        cy.wait(1000)
        cy.get(':nth-child(1) > .datatable-body-row > .datatable-row-center > [style="width: 100px; height: 45px;"] > .datatable-body-cell-label > .badge').should('have.text','Pending')
        cn.Edit()          
        fy.Title('Demo Title')                                                             
        fy.Technology('Scala')
        fy.Submit()
        cy.get('.ng-trigger > .ng-tns-c18-0').should('have.text',' Updated Successfully!!!! ')
    })
    it('LB-100 : As Studiohead, user should able to approve/reject contribution of his studio members',function(){
        const page = new Dashboard()
        const menu = new Menu()
        const cn = new Contribution()
        page.Studiohead()
        cy.get("span[class='fs-4']").should('contain','Welcome')    
        cy.title().should('eq','Knoldus Leaderboard')
        menu.BoardDropdown()  
        menu.contribution()
        cy.wait(1000)
        cn.Approvals()
        cy.get(':nth-child(1) > .datatable-body-row > .datatable-row-center > :nth-child(1) > .datatable-body-cell-label').then(($in) => {
            const first = $in.text()
            cy.log(first).should('have.text',first)
        }) 
        cy.get(':nth-child(1) > .datatable-body-row > .datatable-row-center > .pl-1 > .datatable-body-cell-label').then(($faf) => {
            const date = $faf.text()
            cy.log(date).should('have.text',date)
        })
        cy.get('[title="ACTION"] > .datatable-header-cell-template-wrap > .datatable-header-cell-wrapper > .datatable-header-cell-label').should('have.text','ACTION')
        cn.Approve()
        cn.confirmApprove()
        cy.get('.ng-trigger > .ng-tns-c18-0').then(($msg) => {
            const message = $msg.text()
            cy.log(message).should('have.text',message)
        })
        cy.wait(2500)
        cn.Reject()
        cn.confirmReject()
        cy.get('.ng-trigger > .ng-tns-c18-0').then(($mg) => {
            const notice = $mg.text()
            cy.log(notice).should('have.text',notice)
        })
    })
    it('LB-118 : As Studiohead, user should able to view all contributions across Knoldus',function(){
        const page = new Dashboard()
        const menu = new Menu()
        const cn = new Contribution()
        page.Studiohead()
        cy.get("span[class='fs-4']").should('contain','Welcome')    
        cy.title().should('eq','Knoldus Leaderboard')
        menu.BoardDropdown()   
        menu.contribution()
        cy.wait(1000)
        cn.AllContribution()
        cy.wait(1000)
        cy.get(':nth-child(1) > .datatable-body-row > .datatable-row-center > :nth-child(1) > .datatable-body-cell-label').then(($top)=>{
            const title = $top.text()
            cy.log(title).should('have.text',title)
        })
        cy.get(':nth-child(1) > .datatable-body-row > .datatable-row-center > :nth-child(3) > .datatable-body-cell-label').then(($num)=>{
            const date = $num.text()
            cy.log(date).should('have.text',date)
        })
        cy.get(':nth-child(1) > .datatable-body-row > .datatable-row-center > :nth-child(4)').then(($span) => {
            const url = $span.text()
            cy.log(url).should('have.text',url)
        })
        cy.get(':nth-child(1) > .datatable-body-row > .datatable-row-center > :nth-child(5)').then(($int)=>{
            const name = $int.text()
            cy.log(name).should('have.text',name)
        })
        cy.scrollTo('bottom')
    })
})